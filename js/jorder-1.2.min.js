// Copyright (c) 2010-2011 Dan Stocker, http://jorder.net

var jOrder=function(json,options){return jOrder.table(json,options);};jOrder.core=function(){var self={MAX_DEPTH:10,delegate:function(module,host,properties){host=host||jOrder;var property;for(property in module){if(!properties&&module.hasOwnProperty(property)||properties.hasOwnProperty(property)&&(property in module)){host[property]=module[property];}}
return module;},deep:function(json,renumber,depth){depth=depth||0;if(depth>=self.MAX_DEPTH){throw"Deep copying exceeded maximum depth ("+self.MAX_DEPTH+")";}
var result,isArray=json&&typeof json.length!=='undefined',i;renumber=isArray&&renumber===true;if(typeof json!=='object'||json===null){return json;}
result=isArray?[]:{};for(i in json){if(json.hasOwnProperty(i)){if(renumber){result.push(self.deep(json[i],renumber,depth+1));}else{result[i]=self.deep(json[i],renumber,depth+1);}}}
return result;},shallow:function(json,renumber){var result,i;if(renumber){result=[];for(i in json){if(!isNaN(i)){result.push(json[i]);}}}else{result=json.concat([]);}
return result;},keys:function(object){var result=[],key;for(key in object){if(object.hasOwnProperty(key)){result.push(key);}}
return result;},values:function(object){var result=[],key;for(key in object){if(object.hasOwnProperty(key)){result.push(object[key]);}}
return result;},split:function(object){var keys=[],values=[],key;for(key in object){if(object.hasOwnProperty(key)){keys.push(key);values.push(object[key]);}}
return{keys:keys,values:values};},join:function(left,right){var result={},key;for(key in left){if(left.hasOwnProperty(key)){result[left[key]]=right[key];}}
return result;},copyTable:function(json){return self.deep(json,true);}};return self.delegate(self);}();if(typeof Object.create!=='function'){Object.create=function(o){function F(){}
F.prototype=o;return new F();}}
jOrder.constants=function($core){return $core.delegate({name:"jOrder",asc:1,desc:-1,string:0,number:1,text:2,array:3,start:0,end:1,exact:0,range:1,startof:2});}(jOrder.core);jOrder.logging=function($core){var lconsole=typeof window==='object'?window.console:console,self={log:function(msg){if(lconsole&&jOrder.logging){lconsole.log(msg);}},warn:function(msg){if(lconsole&&jOrder.logging){lconsole.warn(msg);}},error:function(){self.warn("Use throw instead of .error()");}};self.warning=self.warn;return $core.delegate(self);}(jOrder.core);jOrder.collection=function($logging){return function(){var items={},count=0,self={add:function(name,item){if(items.hasOwnProperty(name)){$logging.warn("Overwriting existing item '"+name+"'");delete items[name];count--;}
items[name]=item;count++;return this;},get:function(name){if(!items.hasOwnProperty(name)){$logging.warn("Invalid item name: '"+name+"'");return;}
return items[name];},clear:function(){items={};count=0;return this;},each:function(handler){var i;for(i in items){if(items.hasOwnProperty(i)&&handler(i,items[i])===true){return this;}}
return this;},count:function(){return count;}};return self;};}(jOrder.logging);jOrder.signature=function($constants,$core,$logging){return function(fields,options){if(typeof fields==='undefined'||!fields.length){throw"No field(s) specified";}
options=options||{};if(fields.length>1){switch(options.type){case $constants.text:throw"Can't create a text index on more than one field.";case $constants.number:throw"Can't create a number index on more than one field.";}}
var self={options:options,signature:function(row,strict){if(!row){return escape(fields.join('_'));}
var i,lookup;if(strict){lookup=$core.join(fields,[]);for(i in row){if(row.hasOwnProperty(i)&&!lookup.hasOwnProperty(i)){return false;}}}else{for(i=0;i<fields.length;i++){if(!row.hasOwnProperty(fields[i])){return false;}}}
return true;},key:function(row){if(self.options.type===$constants.number){return row[fields[0]];}
var key=[],i,field;for(i=0;i<fields.length;i++){field=fields[i];if(!row.hasOwnProperty(field)){return undefined;}
key.push(row[field]);}
return escape(key.join('_'));},keys:function(row){switch(self.options.type){case $constants.array:return row[fields[0]];case $constants.text:return row[fields[0]].split(/\s+/g);default:case $constants.number:case $constants.string:var key=self.key(row);return typeof key!=='undefined'?[key]:[];}}};return self;};}(jOrder.constants,jOrder.core,jOrder.logging);jOrder.lookup=function($constants,$logging,$signature){return function(json,fields,options){var base=$signature(fields,options),self=Object.create(base),flat,count;self.clear=function(){flat={};count=0;};self.clear();self.add=function(keys,rowId){var i,key,ids;for(i=0;i<keys.length;i++){key=keys[i];if(self.options.grouped){if(!flat.hasOwnProperty(key)){ids={items:{},count:1};ids.items[rowId]=rowId;flat[key]=ids;count++;}else{ids=flat[key];if(!ids.items.hasOwnProperty(rowId)){ids.count++;ids.items[rowId]=rowId;count++;}}}else{if(flat.hasOwnProperty(key)){throw"Can't add more than one row ID to the non-grouped index '"+self.signature()+"'. Consider using a group index instead.";}
flat[key]=rowId;count++;}}};self.remove=function(keys,rowId){var i,key,ids;for(i=0;i<keys.length;i++){key=keys[i];if(!flat.hasOwnProperty(key)){throw"Can't remove row. Row '"+key+"' doesn't match signature '"+self.signature()+"'.";}
if(!self.options.grouped){delete flat[key];count--;return;}
if(typeof rowId==='undefined'){throw"Must pass rowId when deleting from group index.";}
ids=flat[key];if(ids.items&&ids.items.hasOwnProperty(rowId)){ids.count--;count--;}
if(!ids.count){delete flat[key];}else{delete ids.items[rowId];}}};self.lookup=function(rows){var result=[],i,key,ids,j;for(i in rows){if(flat.hasOwnProperty(key=self.key(rows[i]))){ids=flat[key].items;if(ids){for(j in ids){if(ids.hasOwnProperty(j)){result.push(ids[j]);}}}else{result.push(flat[key]);}}}
return result;};self.flat=function(){return flat;};self.count=function(key){if(typeof key==='undefined'){return count;}else if(!flat.hasOwnProperty(key)){return 0;}else if(self.options.grouped){return flat[key].count;}else{return 1;}};return self;};}(jOrder.constants,jOrder.logging,jOrder.signature);jOrder.order=function($constants,$logging,$signature){var DEFAULT_LIMIT=100;return function(json,fields,options){var base=$signature(fields,options),self=Object.create(base),order;self.clear=function(){order=[];};self.clear();self.reorder=function(){order.sort(function(a,b){if(a.key>b.key){return 1;}else if(a.key<b.key){return-1;}else if(a.rowId>b.rowId){return 1;}else if(a.rowId<b.rowId){return-1;}else{return 0;}});};function equal(actual,expected){switch(self.options.type){case $constants.string:case $constants.text:return actual.match(new RegExp('^'+expected));default:case $constants.number:return actual===expected;}}
self.add=function(keys,rowId,lazy){var i,key,pos,alt;for(i=0;i<keys.length;i++){key=keys[i];switch(self.options.type){case $constants.text:case $constants.array:alt=key.toLowerCase();break;default:alt=key;break;}
if(lazy){order.push({key:alt,rowId:rowId});}else{pos=order.length>0?self.bsearch(key,$constants.start,rowId):0;order.splice(pos,0,{key:alt,rowId:rowId});}}};self.remove=function(keys,rowId){var i,pos;for(i=0;i<keys.length;i++){pos=self.bsearch(keys[i],$constants.start,rowId);order.splice(pos,1);}};function bsearch(key,start,end,rowId){var hasId=typeof rowId!=='undefined',middle,median,first=order[start];if(hasId&&first.rowId===rowId||!hasId&&equal(first.key,key)){return{pos:start,exact:true};}
if(end-start<=1){return{pos:start,exact:false};}
middle=start+Math.floor((end-start)/2);median=order[middle];if(median.key<key||hasId&&median.key===key&&median.rowId<rowId){return bsearch(key,middle,end,rowId);}else{return bsearch(key,start,middle,rowId);}}
self.bsearch=function(key,type,rowId){if(!order.length){return-1;}
var start=0,first=order[0],end=order.length-1,last=order[end],hasId=typeof rowId!=='undefined',hit,pos;if(key<first.key||hasId&&equal(first.key,key)&&rowId<first.rowId){return type===$constants.start?start:-1;}else if(key>last.key||hasId&&equal(last.key,key)&&rowId>last.rowId){return type===$constants.end?end:order.length;}
hit=bsearch(key,start,end,rowId);if(hit.exact){pos=type===$constants.start?hit.pos:hit.pos-1;}else{pos=type===$constants.start?hit.pos+1:hit.pos;}
return pos;};self.range=function(bounds,options){bounds=bounds||{};options=options||{};options.offset=options.offset||0;options.limit=options.limit||DEFAULT_LIMIT;var lower,upper,start,end,result=[],i;switch(self.options.type){case $constants.text:lower=bounds.lower?escape(bounds.lower.toLowerCase()):bounds.lower;upper=bounds.upper?escape(bounds.upper.toLowerCase()):bounds.upper;break;case $constants.string:lower=bounds.lower?escape(bounds.lower):bounds.lower;upper=bounds.upper?escape(bounds.upper):bounds.upper;break;default:lower=bounds.lower;upper=bounds.upper;break;}
start=(typeof lower!=='undefined'?self.bsearch(lower,$constants.start):0)+options.offset;end=Math.min(typeof upper!=='undefined'?self.bsearch(upper,$constants.end):order.length-1,start+options.limit-1);for(i=start;i<=end;i++){result.push(order[i].rowId);}
return result;};self.order=function(dir,options){if(!order.length){return order;}
dir=dir||$constants.asc;options=options||{};options.offset=options.offset||0;options.limit=options.limit||0;if(dir===$constants.asc&&!options.offset&&!options.limit){return order;}
options.limit=options.limit||DEFAULT_LIMIT;switch(dir){case $constants.desc:return order.slice(Math.max(0,order.length-options.offset-options.limit),order.length-options.offset).reverse();default:case $constants.asc:return order.slice(options.offset,Math.min(options.offset+options.limit,order.length));}};self.compact=function(){$logging.warn("Compacting is obsolete");};return self;};}(jOrder.constants,jOrder.logging,jOrder.signature);jOrder.index=function($core,$constants,$logging,$lookup,$order){return function(json,fields,options){options=options||{};options.type=options.type||$constants.string;var lookup=$lookup(json,fields,options),order=options.ordered?$order(json,fields,options):null,self={add:function(row,rowId,lazy){var keys=self.keys(row);if(!keys.length){throw"Can't add row to index. No field matches signature '"+self.signature()+"'";}
lookup.add(keys,rowId);if(order){order.add(keys,rowId,lazy);}
return self;},remove:function(row,rowId){var keys=self.keys(row);if(!keys.length){throw"Can't remove row from index. No field matches signature '"+self.signature()+"'";}
lookup.remove(keys,rowId);if(order){order.remove(keys,rowId);}
return self;},unbuild:function(){lookup.clear();if(order){order.clear();}
return self;},rebuild:function(lazy){self.unbuild();$logging.log("Building index of length: "+json.length+", signature '"+lookup.signature()+"'.");var i,row;for(i=0;i<json.length;i++){if(!(row=json[i])){continue;}
self.add(row,i,lazy);}
if(order&&lazy){order.reorder();}
return self;},grouped:function(){return Boolean(options.grouped);},ordered:function(){return Boolean(order);},type:function(){return options.type;}};$core.delegate(lookup,self,{'lookup':true,'flat':true,'count':true,'signature':true,'key':true,'keys':true});if(order){$core.delegate(order,self,{'reorder':true,'compact':true,'bsearch':true,'range':true,'order':true});}
if(options.build!==false){self.rebuild(true);}
return self;};}(jOrder.core,jOrder.constants,jOrder.logging,jOrder.lookup,jOrder.order);jOrder.indexes=function($collection,$index){return function(json){var self=Object.create($collection()),base_add=self.add,indexes={},count=0;self.add=function(name,fields,options){base_add(name,$index(json,fields,options));};self.find=function(indexName,options){options=options||{};if(indexName){return self.get(indexName);}
var index;self.each(function(key,item){if((typeof options.row==='undefined'||item.signature(options.row,true))&&(typeof options.grouped==='undefined'||item.grouped()===options.grouped)){index=item;return true;}});return index;};self.rebuild=function(){self.each(function(name,index){index.rebuild();});};self.ordered=function(fields){var index=self.find(null,{row:fields});if(!index){return false;}
return index.ordered();};self.grouped=function(fields){var index=self.find(null,{row:fields});if(!index){return false;}
return index.grouped();};return self;};}(jOrder.collection,jOrder.index);jOrder.selectors=function($core){return{exact:function(row,data){var match=false,partial,condition,i,field;for(i=0;i<data.conditions.length;i++){partial=true;condition=data.conditions[i];for(field in condition){if(condition.hasOwnProperty(field)){partial&=(condition[field]===row[field]);if(!partial){break;}}}
match|=partial;if(match){break;}}
return match;},startof:function(row,data){var kv=$core.split(data.conditions[0]);return row[kv.keys[0]].indexOf(kv.values[0])===0;},range:function(row,data){var kv=$core.split(data.conditions[0]),bounds=kv.values[0],field=kv.keys[0];return bounds.lower<=row[field]&&bounds.upper>row[field];}};}(jOrder.core);jOrder.table=function($core,$constants,$logging,$indexes,$selectors){return function(json,options){options=options||{renumber:false};var indexes=$indexes(json),self={index:function(name,fields,options){if(!name){indexes.rebuild();return self;}else if(!fields){return indexes.get(name);}else{indexes.add(name,fields,options);return self;}},reindex:function(){indexes.rebuild();return self;},clear:function(){indexes.clear();return self;},update:function(before,after,options){options=options||{};var index=indexes.find(options.indexName,{grouped:false}),i,oldId,newId,name;if(before){if(!index){throw"Can't find suitable index for fields: '"+$core.keys(before).join(",")+"'.";}
oldId=index.lookup([before])[0];before=json[oldId];}
if(typeof oldId==='undefined'){if(!after){$logging.warn("Update called but nothing changed.");return self;}
newId=json.push(after)-1;}else{delete json[oldId];if(after){newId=json.push(after)-1;}}
indexes.each(function(name,index){if(before){index.remove(before,oldId);}
if(after){index.add(after,newId);}});return self;},insert:function(rows,options){var i;for(i=0;i<rows.length;i++){self.update(null,rows[i],options);}
return self;},remove:function(rows,options){var i;for(i=0;i<rows.length;i++){self.update(rows[i],null,options);}
return self;},select:function(rowIds,options){options=options||{};var result=[],i,rowId;if(options.renumber){for(i=0;i<rowIds.length;i++){result.push(json[rowIds[i]]);}}else{for(i=0;i<rowIds.length;i++){rowId=rowIds[i];result[rowId]=json[rowId];}}
return result;},where:function(conditions,options){options=options||{};var index=indexes.find(options.indexName,{row:conditions[0]}),rowIds,condition,range,lower,upper,selector;if(index){switch(options.mode){case $constants.range:condition=conditions?$core.values(conditions[0])[0]:null;if(condition){range=typeof condition==='object'?condition:{lower:condition,upper:condition};rowIds=index.range({lower:range.lower,upper:range.upper},options);}else{rowIds={lower:null,upper:null};}
break;case $constants.startof:condition=conditions?$core.values(conditions[0])[0]:null;lower=condition?condition:null;upper=lower?lower+'z':null;rowIds=index.range({lower:lower,upper:upper},options);break;default:case $constants.exact:if(options.offset||options.limit){$logging.warn("Running 'jOrder.table.where()' in 'exact' mode with offset and limit specified. Consider running it in 'range' mode.");}
rowIds=conditions?index.lookup(conditions):$core.values(index.flat());break;}
return self.select(rowIds,{renumber:options.renumber});}else{$logging.warn("No matching index for fields: '"+$core.keys(conditions[0]).join(',')+"'.");switch(options.mode){case $constants.range:selector=$selectors.range;break;case $constants.startof:selector=$selectors.startof;break;default:case $constants.exact:selector=$selectors.exact;break;}
return self.filter(selector,options,{conditions:conditions});}},aggregate:function(indexName,initCallback,iterateCallback){var result={},index=indexes.find(indexName),groupIndex,groupId,items,seed,aggregated,i;if(!index.grouped()){throw"Can't aggregate using a non-group index! Signature: '"+index.signature()+"'.";}
$logging.warn("Aggregation iterates over table (length: "+json.length+").");groupIndex=index.flat();for(groupId in groupIndex){if(groupIndex.hasOwnProperty(groupId)){items=groupIndex[groupId].items;for(i in items){if(items.hasOwnProperty(i)){seed=json[i];break;}}
if(initCallback){aggregated=iterateCallback(initCallback(seed),$core.deep(seed));}else{aggregated=$core.deep(seed);}
for(i in items){if(items.hasOwnProperty(i)&&json[i]!==seed){aggregated=iterateCallback(aggregated,json[i]);}}
result[groupId]=aggregated;}}
return result;},orderby:function(fields,dir,options){options=options||{};dir=dir||$constants.asc;var index=indexes.find(options.indexName,{row:$core.join(fields,[])}),order,rowIds,i;if(index.type()===$constants.text){throw"Can't order by free-text index: '"+fields.join(',')+"'.";}
if(index.order){order=index.order(dir,options);rowIds=[];for(i=0;i<order.length;i++){rowIds.push(order[i].rowId);}
return self.select(rowIds,{renumber:true});}else{$logging.warn("Unordered index or no index available. Sorting table on the fly.");return $core.shallow(json).sort(function(a,b){return a[fields[0]]>b[fields[0]]?1:a[fields[0]]<b[fields[0]]?-1:0;});}},filter:function(selector,options,data){$logging.warn("Performing linear search on table (length: "+json.length+"). Consider using an index.");options=options||{};options.offset=options.offset||0;var result=[],i,row,counter=0;for(i in json){if(json.hasOwnProperty(i)&&selector(row=json[i],data)){if(counter++>=options.offset){if(options.renumber){result.push(row);}else{result[i]=row;}}
if(options.limit&&counter===options.offset+options.limit){break;}}}
return result;},count:function(){if(indexes.count()){return indexes.find().count();}else{$logging.warn("Indexless row count iterates over table (length: "+json.length+").");return $core.keys(json).length;}},flat:function(){return json;},indexes:function(){return indexes;},first:function(){var i;for(i in json){if(json.hasOwnProperty(i)){return json[i];}}},column:function(field,options){options=options||{};var result=[],i;if(options.renumber){for(i in json){if(json.hasOwnProperty(i)){result.push(json[i][field]);}}
return result;}
for(i in json){if(json.hasOwnProperty(i)){result[i]=json[i][field];}}
return result;}};$core.delegate(indexes,self,{'ordered':true,'grouped':true});return self;};}(jOrder.core,jOrder.constants,jOrder.logging,jOrder.indexes,jOrder.selectors);